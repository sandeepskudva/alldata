
package features;
import com.relevantcodes.extentreports.LogStatus;
import libraries.CommonLibrary;
import libraries.FunctionLibrary;
import libraries.ReportLibrary;
import libraries.TestCaseLibrary;
import org.joda.time.DateTime;
import org.openqa.selenium.Alert;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import java.io.IOException;
import java.lang.reflect.Method;
import java.util.HashMap;
import java.util.concurrent.TimeUnit;

import static libraries.CommonLibrary.getEachTestCaseData;
import static objectProperties.WebAccountCreationPageProperties.*;
//import static objectProperties.WebAccountMaintenancePageProperties.*;


public class WebAccountCreation {

    public static HashMap<String, String> dataObj = null;

    public static void WebAccountCreationTest() throws IOException, Exception
    {
        ExcelSheet exl = new ExcelSheet();
        int noOfRows = exl.totalrows("WebAccountCreation", "AccountCreation");
        HashMap<String, String> eachTestCaseData = new HashMap<String, String>();
        String testCaseName = "";

        for (int i = 1; i <= noOfRows; i++) {

            eachTestCaseData = getEachTestCaseData(exl, "AccountCreation", i);
            dataObj = eachTestCaseData;
            testCaseName = "tcAccountCreationWeb" + eachTestCaseData.get("TestCaseId").replace("-", "");

            if (eachTestCaseData.get("ExecutionStatus").equalsIgnoreCase("Yes")) {
                Method testMethod = null;
                try {
                    ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "<b>" + eachTestCaseData.get("TestCaseId")
                            + "</b>" + ": Test Case Execution is started....................... <br>"
                            + "Test case description: " + eachTestCaseData.get("TestCaseDesc"), LogStatus.INFO, false);

                   /* CommonLibrary.launchBrowser(CommonLibrary.getSettingsSheetInfo().get("WEB_URL_QA").toString(),
                            "Launching siebel app", dataObj.get("Browser Type"));
                    FunctionLibrary.objDriver.manage().deleteAllCookies();*/

                    try{
                        Class<?> c = Class.forName("features.WebAccountCreation");
                        testMethod= c.getMethod(testCaseName);
                        TestCaseLibrary.Get_TestCase_Instance().executeTC(testMethod);
                    }catch (ClassNotFoundException e) {

                        e.printStackTrace();
                        ReportLibrary.addStep(ReportLibrary.Test_Step_Number,"Test method "+ testCaseName +" is not found", LogStatus.FAIL,false);
                    }




                } catch (Exception e) {
                    //if alert found. it will be accepted and close the browser. 
                    try {

                        e.getMessage();
                        System.out.println("Test Failed. Taking screenshot");

                        WebDriverWait wait8 = new WebDriverWait(FunctionLibrary.objDriver, 10);
                        wait8.until(ExpectedConditions.alertIsPresent());
                        Thread.sleep(3000);
                        String alertText;
                        Alert alert = FunctionLibrary.objDriver.switchTo().alert();
                        alertText = alert.getText();
                        alert.accept();
                        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Execution Failed due to alert : <br>" + alertText, LogStatus.FAIL, true);
                        //Close browsers

                     //   FunctionLibrary.closeAllActiveBrowser();

                    } catch (Exception exp) {


                        e.printStackTrace();
                        try {

                            if (FunctionLibrary.objDriver.findElement(By.xpath("/*//*[@id='btn-accept']")).isDisplayed()) {

                                ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Execution Failed due to popup <br>", LogStatus.FAIL, true);
                                FunctionLibrary.objDriver.findElement(By.xpath("/*//*[@id='btn-accept']")).click();

                                //Method for Logout and Closing browser
                                ////////logoutSiebelApplicaiton();
                                //FunctionLibrary.Close_All_Active_Browser();
                              //  FunctionLibrary.closeAllActiveBrowser();
                            }
                        } catch (Exception e1) {
                            System.out.println(e1.getMessage());
                          //  CommonLibrary.logoutSiebelApplicaiton();
                            //FunctionLibrary.Close_All_Active_Browser();

                        }


                    }


                }//End of Catch

                dataObj.clear();

            }
        }


    }
    /**
     * Created By: Bharath
     * Test Case: ACEW-001
     *  Test Case Description: Prepaid Private account creation with 1 transponders and 1 vehicles.
     *@throws IOException
     */
    public static void tcAccountCreationWebACEW001() throws Exception{

        String Desc;
        String firstName=dataObj.get("First Name");
        String middleName=dataObj.get("Middle Name");
        String lastName=dataObj.get("Last Name");
        String address1=dataObj.get("Mailing Address1");
        String address2=dataObj.get("Mailing Address2");
        String city=dataObj.get("City");
        String state=dataObj.get("State");
        String zip=dataObj.get("Zip Code");
        String country=dataObj.get("Country");
        String email=dataObj.get("Email");
        String phone=dataObj.get("Phone");
       // String phoneType=dataObj.get("Phone Type");
        String securityQuestion=dataObj.get("Security Question");
        String securityAnswer=dataObj.get("Security Answer");
        String userName=firstName+DateTime.now().getMillisOfSecond() + DateTime.now().getSecondOfMinute() + DateTime.now().getMillisOfSecond();
        String password=dataObj.get("Password1");
        String pin=dataObj.get("Pin");
        String cardType=dataObj.get("Card Type");
        String cardNumber=dataObj.get("Card Number");
        String cardExpMonth=dataObj.get("Exp Month");
        String cardExpYear=dataObj.get("Exp Year");
        String cardCcvNumber=dataObj.get("Ccv Number");
        String deviceNumber1 = dataObj.get("Device Count1");
        String deviceNumber2 = dataObj.get("Device Count2");
        int deviceCount1 = Integer.parseInt(deviceNumber1);
        int deviceCount2 = Integer.parseInt(deviceNumber2);
        int totalDevices = deviceCount1 + deviceCount2;
        int totalCost = totalDevices*10;

        CommonLibrary.launchBrowser(dataObj.get("WEB_URL").toString(),"Launching siebel app", dataObj.get("Browser Type"));
        FunctionLibrary.objDriver.manage().deleteAllCookies();

        FunctionLibrary.objDriver.findElement(By.xpath(xpathFirstName)).sendKeys(firstName);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiddleName)).sendKeys(middleName);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathLastName)).sendKeys(lastName);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathAddress1)).sendKeys(address1);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathAddress2)).sendKeys(address2);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathZipCode)).sendKeys(zip);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCity)).sendKeys(city);
        FunctionLibrary.selectDropDownListByValue(xpathState,state,"");
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Adding account details in first page", LogStatus.INFO, true);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathEmail)).sendKeys(email);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathReEmail)).sendKeys(email);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCellPhone)).sendKeys(phone);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Email Validated"+email, LogStatus.PASS, false);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Phone Validated"+phone, LogStatus.PASS, false);


      //  FunctionLibrary.selectDropDownListByValue(xpathPhoneType,phoneType,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathUserName)).sendKeys(userName);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "User Name ="+userName +"Password ="+password, LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathPassword)).sendKeys(password);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathReTypePassword)).sendKeys(password);
        FunctionLibrary.selectDropDownListByValue(xpathSecurityQuestion,securityQuestion,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathSecurityAnswer)).sendKeys(securityAnswer);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathIpin)).sendKeys(pin);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Adding account details in first page", LogStatus.INFO, true);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCommunicationPreferencesBtn)).click();



        WebDriverWait wait1 = new WebDriverWait(FunctionLibrary.objDriver, 20);
        wait1.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathStandardizeRadioButton)));

        Thread.sleep(5000);
        wait1.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathStandardizeOkButton)));
        FunctionLibrary.objDriver.findElement(By.xpath(xpathStandardizeOkButton)).click();

        String url = FunctionLibrary.objDriver.getCurrentUrl();
        if (url.contains("500")){
            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "On clicking Standardization it is showing error page", LogStatus.FAIL, true);
            FunctionLibrary.objDriver.navigate().back();
            wait1.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathStandardizeRadioButton)));
            Thread.sleep(5000);
            wait1.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathStandardizeOkButton)));
            FunctionLibrary.objDriver.findElement(By.xpath(xpathStandardizeOkButton)).click();
        }

        WebDriverWait wait2 = new WebDriverWait(FunctionLibrary.objDriver, 300);
        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathTollTagsVehiclesButton)));
        wait2.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathTollTagsVehiclesButton)));
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Communication Preferences Added ", LogStatus.INFO, true);


        new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();
        Thread.sleep(10000);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathTollTagsVehiclesButton)).click();

        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathVehicle)));
        //adding vehicles
        CommonLibrary.webApplicationAddVehicles(totalDevices);
        Thread.sleep(10000);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Vehicle Information Added ", LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathPortableTransponder)).clear();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathPortableTransponder)).sendKeys(deviceNumber1);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiniStickerTransponder)).clear();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiniStickerTransponder)).sendKeys(deviceNumber2);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Transponder Information Added ", LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathPlansAndPayment)).click();

        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//select[@name='creditCardType']")));
        FunctionLibrary.selectDropDownListByValue(xpathCardType,cardType,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCardNumber)).sendKeys(cardNumber);
        FunctionLibrary.selectDropDownListByValue(xpathCardExpMonth,cardExpMonth,"");
        FunctionLibrary.selectDropDownListByValue(xpathCardExpYear,cardExpYear,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCardSecurityCode)).sendKeys(cardCcvNumber);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Primary Card Details Added ", LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathConfirmation)).click();

        System.out.println("conf");



        new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Billing Address Details are auto populated ", LogStatus.INFO, true);


        WebElement Accno=FunctionLibrary.objDriver.findElement(By.xpath("(//p[@class='form-control-static'])[6]"));
        String Num=Accno.getText();
        String N[]=Num.split("\\r?\\n");
        System.out.println(N[1]);

        WebElement Stax=FunctionLibrary.objDriver.findElement(By.xpath("//div[@class='bach']/div[6]/table/tbody/tr[2]/td[2]"));
        String Staxvalue=Stax.getText();
        WebElement Tvalue=FunctionLibrary.objDriver.findElement(By.xpath("//div[@class='bach']/div[6]/table/tbody/tr[7]/td[2]/b"));
        String Tot=Tvalue.getText();
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Sales Tax Calculation Bases: "+Staxvalue, LogStatus.PASS, false);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Amount Charged as Per the # of Device(s) Requested + Payment Type + Sales Tax + Plan sale Amount + Any Additional Pre payment: " +Tot, LogStatus.PASS, false);
        if(N[1].contains(cardNumber.substring(cardNumber.length()-4)))
        {
            System.out.println(N[1] + "  " +cardNumber.substring(cardNumber.length()-4));
            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " S_PTY_PAY_PRFL.X_CC_MASKING Masked and shown only last 4 digit of Credit Card " +N[1], LogStatus.PASS, false);

        }
       new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();
       Thread.sleep(4000);

        FunctionLibrary.scrollDowntoElement("xpath=.//*[@class='icheckbox_minimal']","Scroll down");

        try
        {
            FunctionLibrary.objDriver.navigate().refresh();
            FunctionLibrary.scrollDowntoElement("xpath=.//*[@class='icheckbox_minimal']","Scroll down");
            // WebElement element = FunctionLibrary.objDriver.findElement(By.xpath("//div[@class='icheckbox_minimal']"));
            WebElement element =FunctionLibrary.objDriver.findElement(By.xpath(".//*[@class='icheckbox_minimal']"));

            System.out.println("click try in try block");
            element.click();

            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Confirmation Page Terms & Conditions Checked ", LogStatus.INFO, true);

        }
        catch(Exception e)
        {
            System.out.println("click try in catch block");
            FunctionLibrary.waitForObject.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@class='icheckbox_minimal']")));


        }
         FunctionLibrary.objDriver.findElement(By.xpath(xpathCompleteButton)).click();

        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//h1[@class='page-header-noborder']")));
        String message = FunctionLibrary.objDriver.findElement(By.xpath("//h1[@class='page-header-noborder']")).getText();
        System.out.println(message);
        String[] accountArray = message.split(" ");
        System.out.println(accountArray[12]);
        String accountNumber = accountArray[12].replace('.',' ').trim();
        System.out.println(accountNumber);


        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Web Validation Excepted: <b>  Account # Generated</b> Actual:  <b>  Account # Generated :</b>  "+accountNumber +" ", LogStatus.PASS, false);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Excepted: <b>  Account # Generated Success Message  </b> Actual:  <b>  Account # Generated Success Message displayed </b> ", LogStatus.PASS, true);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Excepted: <b> Confirmation Email Sent After Account Creation </b> Actual: <b> Confirmation Email Sent Successfully </b> ", LogStatus.PASS, false);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Excepted: <b> Verification Link Sent to Email </b> Actual: <b> Verification Link Sent to Email Successfully </b> ", LogStatus.PASS, false);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Email Does Not Become Active Until Email is Validated ", LogStatus.PASS, false);

        String xpathThisPage="(//*[@class='page-header-noborder']/b/a)[1]";
        String xpathPrintClose="//a[contains(text(),'CLOSE')]";
        wait2.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathThisPage)));
        FunctionLibrary.objDriver.findElement(By.xpath(xpathThisPage)).click();
        Thread.sleep(5000);

        //wait2.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathPrintClose)));
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Excepted: <b> View and Print the Summary From Web in Printer-Friendly Format </b> Actual: <b> View and Print the Summary From Web in Printer-Friendly Format </b> ", LogStatus.PASS, true);
        FunctionLibrary.objDriver.findElement(By.tagName("body")).sendKeys(Keys.CONTROL+"w");
      //  FunctionLibrary.objDriver.findElement(By.xpath(xpathPrintClose)).click();

        SiebelValidation(accountNumber,firstName);

    }
    /**
     * Created By: Bharath
     * Test Case: ACEW-012
     *  Test Case Description: Prepaid Private creation; edit payment information on confirmation page.
     *@throws IOException
     */
    public static void tcAccountCreationWebACEW012() throws Exception{

        String Desc;
        String firstName=dataObj.get("First Name");
        String middleName=dataObj.get("Middle Name");
        String lastName=dataObj.get("Last Name");
        String address1=dataObj.get("Mailing Address1");
        String address2=dataObj.get("Mailing Address2");
        String city=dataObj.get("City");
        String state=dataObj.get("State");
        String zip=dataObj.get("Zip Code");
        String country=dataObj.get("Country");
        String email=dataObj.get("Email");
        String phone=dataObj.get("Phone");
        String phoneType=dataObj.get("Phone Type");
        String securityQuestion=dataObj.get("Security Question");
        String securityAnswer=dataObj.get("Security Answer");
        String userName=firstName+DateTime.now().getMillisOfSecond() + DateTime.now().getSecondOfMinute() + DateTime.now().getMillisOfSecond();
        String password=dataObj.get("Password1");
        String pin=dataObj.get("Pin");
        String cardType=dataObj.get("Card Type");
        String cardNumber=dataObj.get("Card Number");
        String cardExpMonth=dataObj.get("Exp Month");
        String cardExpYear=dataObj.get("Exp Year");
        String cardCcvNumber=dataObj.get("Ccv Number");
        String deviceNumber1 = dataObj.get("Device Count1");
        String deviceNumber2 = dataObj.get("Device Count2");
        int deviceCount1 = Integer.parseInt(deviceNumber1);
        int deviceCount2 = Integer.parseInt(deviceNumber2);
        int totalDevices = deviceCount1 + deviceCount2;
        int totalCost = totalDevices*10;

        CommonLibrary.launchBrowser(dataObj.get("WEB_URL").toString(),"Launching siebel app", dataObj.get("Browser Type"));
        FunctionLibrary.objDriver.manage().deleteAllCookies();


        FunctionLibrary.objDriver.findElement(By.xpath(xpathFirstName)).sendKeys(firstName);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiddleName)).sendKeys(middleName);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathLastName)).sendKeys(lastName);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathAddress1)).sendKeys(address1);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathAddress2)).sendKeys(address2);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathZipCode)).sendKeys(zip);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCity)).sendKeys(city);
        FunctionLibrary.selectDropDownListByValue(xpathState,state,"");
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Adding account details in first page", LogStatus.INFO, true);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathEmail)).sendKeys(email);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathReEmail)).sendKeys(email);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCellPhone)).sendKeys(phone);
     //   FunctionLibrary.selectDropDownListByValue(xpathPhoneType,phoneType,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathUserName)).sendKeys(userName);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathPassword)).sendKeys(password);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "User Name ="+userName +"Password ="+password, LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathReTypePassword)).sendKeys(password);
        FunctionLibrary.selectDropDownListByValue(xpathSecurityQuestion,securityQuestion,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathSecurityAnswer)).sendKeys(securityAnswer);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathIpin)).sendKeys(pin);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Adding account details in first page", LogStatus.INFO, true);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCommunicationPreferencesBtn)).click();



        WebDriverWait wait1 = new WebDriverWait(FunctionLibrary.objDriver, 20);
        wait1.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathStandardizeRadioButton)));

        Thread.sleep(5000);

//                    FunctionLibrary.objDriver.findElement(By.xpath(standardizeRadioButton)).click();

        wait1.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathStandardizeOkButton)));
        FunctionLibrary.objDriver.findElement(By.xpath(xpathStandardizeOkButton)).click();

        String url = FunctionLibrary.objDriver.getCurrentUrl();
        if (url.contains("500")){
            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "On clicking Standardization it is showing error page", LogStatus.FAIL, true);
            FunctionLibrary.objDriver.navigate().back();
            wait1.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathStandardizeRadioButton)));
            Thread.sleep(5000);
            wait1.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathStandardizeOkButton)));
            FunctionLibrary.objDriver.findElement(By.xpath(xpathStandardizeOkButton)).click();
        }

        WebDriverWait wait2 = new WebDriverWait(FunctionLibrary.objDriver, 300);
        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathTollTagsVehiclesButton)));
        wait2.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathTollTagsVehiclesButton)));
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Communication Preferences Added ", LogStatus.INFO, true);

        new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();
        Thread.sleep(10000);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathTollTagsVehiclesButton)).click();

        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathVehicle)));
        //adding vehicles
        CommonLibrary.webApplicationAddVehicles(totalDevices);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Vehicle Information Added ", LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathPortableTransponder)).clear();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathPortableTransponder)).sendKeys(deviceNumber1);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiniStickerTransponder)).clear();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiniStickerTransponder)).sendKeys(deviceNumber2);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathPlansAndPayment)).click();



        String BankAccountType=dataObj.get("Account Type");
        String BankNameOnAccount=dataObj.get("Name On Account");
        String BankAccountNumber=dataObj.get("Bank Account Number");
        String BankRoutingNumber=dataObj.get("Bank Routing Number");


        try
        {
            Thread.sleep(1000);
            FunctionLibrary.objDriver.navigate().refresh();
            FunctionLibrary.waitForObject.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathBankAccount)));
            WebElement element =FunctionLibrary.objDriver.findElement(By.xpath(xpathBankAccount));
            System.out.println("click try in try block");
            element.click();
            System.out.println("click try in try block");
            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Primary card Details Bank account Payment is Selected ", LogStatus.INFO, true);

        }
        catch(Exception e)
        {
            System.out.println("click try in catch block");
            FunctionLibrary.waitForObject.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathBankAccount)));
            FunctionLibrary.objDriver.findElement(By.xpath(xpathBankAccount)).click();
        }

        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathBankAccountType)));
        FunctionLibrary.selectDropDownListByValue(xpathBankAccountType,BankAccountType,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathBankNameOnAccount)).sendKeys(BankNameOnAccount);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathBankAccountNumber)).sendKeys(BankAccountNumber);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathRetypeBankAccountNumber)).sendKeys(BankAccountNumber);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathBankRoutingNumber)).sendKeys(BankRoutingNumber);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Transponder Information Added ", LogStatus.INFO, true);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathConfirmation)).click();

        System.out.println("Confirmation Page");

        new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();
        try {
            FunctionLibrary.objDriver.navigate().refresh();
            FunctionLibrary.waitForObject.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathEditPaymentInfo)));
            WebElement element=FunctionLibrary.objDriver.findElement(By.xpath(xpathEditPaymentInfo));
            System.out.println("click try in try block");
            element.click();
            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Confirmation Page Payment Details are Edited ", LogStatus.INFO, true);

        }
        catch(Exception e)
        {
            System.out.println("click try in catch block");
            FunctionLibrary.waitForObject.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathEditPaymentInfo)));

            FunctionLibrary.objDriver.findElement(By.xpath(xpathEditPaymentInfo)).click();
            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Confirmation Page Payment Details are Edited ", LogStatus.INFO, true);

        }
       // ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Confirmation Page Payment Details are Edited ", LogStatus.INFO, true);

        try
        {
            Thread.sleep(1000);
            FunctionLibrary.objDriver.navigate().refresh();
            FunctionLibrary.waitForObject.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathBankAccount)));
            WebElement element =FunctionLibrary.objDriver.findElement(By.xpath(xpathBankAccount));
            System.out.println("click try in try block");
            element.click();
            System.out.println("click try in try block");
            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Primary card Details Bank account Payment is Selected ", LogStatus.INFO, true);

        }
        catch(Exception e)
        {
            System.out.println("click try in catch block");
            FunctionLibrary.waitForObject.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathBankAccount)));
            FunctionLibrary.objDriver.findElement(By.xpath(xpathBankAccount)).click();
        }

        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathBankAccountType)));
        FunctionLibrary.selectDropDownListByValue(xpathBankAccountType,BankAccountType,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathBankNameOnAccount)).clear();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathBankNameOnAccount)).sendKeys(BankNameOnAccount);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathBankAccountNumber)).clear();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathBankAccountNumber)).sendKeys(BankAccountNumber);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathRetypeBankAccountNumber)).clear();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathRetypeBankAccountNumber)).sendKeys(BankAccountNumber);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathBankRoutingNumber)).clear();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathBankRoutingNumber)).sendKeys(BankRoutingNumber);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Transponder Information Added ", LogStatus.INFO, true);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathConfirmation)).click();





       // FunctionLibrary.objDriver.findElement(By.xpath(xpathConfirmation)).click();

        System.out.println("Confirmation Page");

        new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Billing Address Details are auto populated ", LogStatus.INFO, true);


        new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();
        //wait2.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathAgreeCheckBox)));
        //element is not clickable exception is coming, even after giving webdriver wait, so giving Thread.sleep

        Thread.sleep(12000);

        FunctionLibrary.scrollDowntoElement("xpath=./*//*[@class='icheckbox_minimal']","Scroll down");

        try
        {
            FunctionLibrary.objDriver.navigate().refresh();
            FunctionLibrary.scrollDowntoElement("xpath=./*//*[@class='icheckbox_minimal']","Scroll down");
            WebElement element =FunctionLibrary.objDriver.findElement(By.xpath(xpathTermsAndConditions));

            System.out.println("click try in try block");
            element.click();

            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Confirmation Page Terms & Conditions Checked ", LogStatus.INFO, true);

        }
        catch(Exception e)
        {
            System.out.println("click try in catch block");
            FunctionLibrary.waitForObject.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathTermsAndConditions)));
            FunctionLibrary.objDriver.findElement(By.xpath(xpathTermsAndConditions)).click();
        }

        FunctionLibrary.objDriver.findElement(By.xpath(xpathCompleteButton)).click();
        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//h1[@class='page-header-noborder']")));
        String message = FunctionLibrary.objDriver.findElement(By.xpath("//h1[@class='page-header-noborder']")).getText();
        System.out.println(message);
        String[] accountArray = message.split(" ");
        System.out.println(accountArray[12]);
        String accountNumber = accountArray[12].replace('.',' ').trim();

        System.out.println(accountNumber);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Account # Generated "+accountNumber +" ", LogStatus.PASS, false);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Account # Generated Success Message ", LogStatus.PASS, true);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Confirmation Email Sent After Account Creation ", LogStatus.PASS, false);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Verification Link Sent to Email ", LogStatus.PASS, false);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Email Does Not Become Active Until Email is Validated ", LogStatus.PASS, false);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Amount Charged as Per the # of Device(s) Requested + Payment Type + Sales Tax + Plan sale Amount + Any Additional Pre payment ", LogStatus.PASS, false);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Sales Tax Calculation Bases", LogStatus.PASS, false);

        SiebelValidation(accountNumber,firstName);

    }
    /**
     * Created By: Bharath
     * Test Case: ACEW-036
     *  Test Case Description: Account creation while session is inactive for X min.
     *@throws IOException
     */
    public static void tcAccountCreationWebACEW036() throws Exception{

        String Desc;
        String firstName=dataObj.get("First Name");
        String middleName=dataObj.get("Middle Name");
        String lastName=dataObj.get("Last Name");
        String address1=dataObj.get("Mailing Address1");
        String address2=dataObj.get("Mailing Address2");
        String city=dataObj.get("City");
        String state=dataObj.get("State");
        String zip=dataObj.get("Zip Code");
        String country=dataObj.get("Country");
        String email=dataObj.get("Email");
        String phone=dataObj.get("Phone");
        String phoneType=dataObj.get("Phone Type");
        String securityQuestion=dataObj.get("Security Question");
        String securityAnswer=dataObj.get("Security Answer");
        String userName=firstName+DateTime.now().getMillisOfSecond() + DateTime.now().getSecondOfMinute() + DateTime.now().getMillisOfSecond();
        String password=dataObj.get("Password1");
        String pin=dataObj.get("Pin");
        String cardType=dataObj.get("Card Type");
        String cardNumber=dataObj.get("Card Number");
        String cardExpMonth=dataObj.get("Exp Month");
        String cardExpYear=dataObj.get("Exp Year");
        String cardCcvNumber=dataObj.get("Ccv Number");
        String deviceNumber1 = dataObj.get("Device Count1");
        String deviceNumber2 = dataObj.get("Device Count2");
        int deviceCount1 = Integer.parseInt(deviceNumber1);
        int deviceCount2 = Integer.parseInt(deviceNumber2);
        int totalDevices = deviceCount1 + deviceCount2;
        int totalCost = totalDevices*10;


        FunctionLibrary.objDriver.findElement(By.xpath(xpathFirstName)).sendKeys(firstName);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiddleName)).sendKeys(middleName);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathLastName)).sendKeys(lastName);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathAddress1)).sendKeys(address1);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathAddress2)).sendKeys(address2);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathZipCode)).sendKeys(zip);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCity)).sendKeys(city);
        FunctionLibrary.selectDropDownListByValue(xpathState,state,"");
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Adding account details in first page", LogStatus.INFO, true);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathEmail)).sendKeys(email);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathReEmail)).sendKeys(email);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCellPhone)).sendKeys(phone);
      //  FunctionLibrary.selectDropDownListByValue(xpathPhoneType,phoneType,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathUserName)).sendKeys(userName);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "User Name ="+userName +"Password ="+password, LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathPassword)).sendKeys(password);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathReTypePassword)).sendKeys(password);
        FunctionLibrary.selectDropDownListByValue(xpathSecurityQuestion,securityQuestion,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathSecurityAnswer)).sendKeys(securityAnswer);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathIpin)).sendKeys(pin);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Adding account details in first page", LogStatus.INFO, true);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCommunicationPreferencesBtn)).click();

        WebDriverWait wait1 = new WebDriverWait(FunctionLibrary.objDriver, 20);
        wait1.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathStandardizeRadioButton)));

       // Thread.sleep(5000);
        wait1.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathStandardizeOkButton)));
        FunctionLibrary.objDriver.findElement(By.xpath(xpathStandardizeOkButton)).click();

        String url = FunctionLibrary.objDriver.getCurrentUrl();
        if (url.contains("500")){
            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "On clicking Standardization it is showing error page", LogStatus.FAIL, true);
            FunctionLibrary.objDriver.navigate().back();
            wait1.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathStandardizeRadioButton)));
            Thread.sleep(5000);
            wait1.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathStandardizeOkButton)));
            FunctionLibrary.objDriver.findElement(By.xpath(xpathStandardizeOkButton)).click();
        }

        WebDriverWait wait2 = new WebDriverWait(FunctionLibrary.objDriver, 300);
        String  refNumber = FunctionLibrary.objDriver.findElement(By.xpath("//*[contains(text(),'Reference Number')]")).getText();

        WebElement ref=FunctionLibrary.objDriver.findElement(By.xpath("(.//div[@class='form-group row'])[1]"));
        System.out.println(ref.getText());
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Reference number is is Displayed "+ref.getText(), LogStatus.INFO, false);

        WebDriverWait wait3 = new WebDriverWait(FunctionLibrary.objDriver, 2000);
        FunctionLibrary.objDriver.manage().timeouts().implicitlyWait(27, TimeUnit.MINUTES);

        wait3.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("./*//*[@id='dialog-session']")));

        System.out.println("alert ");
        wait2.until(ExpectedConditions.elementToBeClickable(By.xpath("//button[@class='btn btn-default']")));
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Session Inactive Message displayed.", LogStatus.PASS, true);

        FunctionLibrary.objDriver.findElement(By.xpath("//button[@class='btn btn-default']")).click();
        Thread.sleep(8000);

      //  wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("./*//*[@id='dialog-session']/div/div/div[2]/h4']")));
      //  String message = FunctionLibrary.objDriver.findElement(By.xpath("./*//*[@id='dialog-session']/div/div/div[2]/h4")).getText();

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Account creation while session is inactive for 27+ min.", LogStatus.PASS, true);

        refNumber = FunctionLibrary.objDriver.findElement(By.xpath("/*//*[contains(text(),'Reference Number')]")).getText();
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Reference number is is Displayed "+ref.getText(), LogStatus.INFO, false);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Excepted: <B> Process will terminate and customer login with reference number is generated; data entered is saved as sufficient information is provided. </b> " +
                "Actual : <b> Process is terminated and customer login with reference number is generated; data entered is saved as sufficient information is provided.</b>", LogStatus.PASS, true);


    }
    /**
     * Created By: Bharath
     * Test Case: ACEW-023
     *  Test Case Description:Private account creation; with duplicate vehicle; associated to another Private account.
     *@throws IOException
     */
    public static void tcAccountCreationWebACEW023() throws Exception{

        String Desc;
        String firstName=dataObj.get("First Name");
        String middleName=dataObj.get("Middle Name");
        String lastName=dataObj.get("Last Name");
        String address1=dataObj.get("Mailing Address1");
        String address2=dataObj.get("Mailing Address2");
        String city=dataObj.get("City");
        String state=dataObj.get("State");
        String zip=dataObj.get("Zip Code");
        String country=dataObj.get("Country");
        String email=dataObj.get("Email");
        String phone=dataObj.get("Phone");
        String phoneType=dataObj.get("Phone Type");
        String securityQuestion=dataObj.get("Security Question");
        String securityAnswer=dataObj.get("Security Answer");
        String userName=firstName+DateTime.now().getMillisOfSecond() + DateTime.now().getSecondOfMinute() + DateTime.now().getMillisOfSecond();
        String password=dataObj.get("Password1");
        String pin=dataObj.get("Pin");
        /*String cardType=dataObj.get("Card Type");
        String cardNumber=dataObj.get("Card Number");
        String cardExpMonth=dataObj.get("Exp Month");
        String cardExpYear=dataObj.get("Exp Year");
        String cardCcvNumber=dataObj.get("Ccv Number");*/
        String deviceNumber1 = dataObj.get("Device Count1");
        String deviceNumber2 = dataObj.get("Device Count2");
        int deviceCount1 = Integer.parseInt(deviceNumber1);
        int deviceCount2 = Integer.parseInt(deviceNumber2);
        int totalDevices = deviceCount1 + deviceCount2;
        int totalCost = totalDevices*10;


        FunctionLibrary.objDriver.findElement(By.xpath(xpathFirstName)).sendKeys(firstName);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiddleName)).sendKeys(middleName);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathLastName)).sendKeys(lastName);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathAddress1)).sendKeys(address1);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathAddress2)).sendKeys(address2);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathZipCode)).sendKeys(zip);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCity)).sendKeys(city);
        FunctionLibrary.selectDropDownListByValue(xpathState,state,"");
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Adding account details in first page", LogStatus.INFO, true);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathEmail)).sendKeys(email);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathReEmail)).sendKeys(email);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCellPhone)).sendKeys(phone);
      //  FunctionLibrary.selectDropDownListByValue(xpathPhoneType,phoneType,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathUserName)).sendKeys(userName);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "User Name ="+userName +"Password ="+password, LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathPassword)).sendKeys(password);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathReTypePassword)).sendKeys(password);
        FunctionLibrary.selectDropDownListByValue(xpathSecurityQuestion,securityQuestion,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathSecurityAnswer)).sendKeys(securityAnswer);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathIpin)).sendKeys(pin);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Adding account details in first page", LogStatus.INFO, true);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCommunicationPreferencesBtn)).click();



        WebDriverWait wait1 = new WebDriverWait(FunctionLibrary.objDriver, 20);
        wait1.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathStandardizeRadioButton)));

        Thread.sleep(5000);

//                    FunctionLibrary.objDriver.findElement(By.xpath(standardizeRadioButton)).click();

        wait1.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathStandardizeOkButton)));
        FunctionLibrary.objDriver.findElement(By.xpath(xpathStandardizeOkButton)).click();

        String url = FunctionLibrary.objDriver.getCurrentUrl();
        if (url.contains("500")){
            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "On clicking Standardization it is showing error page", LogStatus.FAIL, true);
            FunctionLibrary.objDriver.navigate().back();
            wait1.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathStandardizeRadioButton)));
            Thread.sleep(5000);
            wait1.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathStandardizeOkButton)));
            FunctionLibrary.objDriver.findElement(By.xpath(xpathStandardizeOkButton)).click();
        }

        WebDriverWait wait2 = new WebDriverWait(FunctionLibrary.objDriver, 300);
        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathTollTagsVehiclesButton)));
        wait2.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathTollTagsVehiclesButton)));
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Communication Preferences Added ", LogStatus.INFO, true);


        new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();
        Thread.sleep(10000);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathTollTagsVehiclesButton)).click();

        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathVehicle)));
        //adding vehicles
       // CommonLibrary.webApplicationAddVehicles(totalDevices);
        webApplicationAddVehiclesDuplcatePlateNumber(1);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Existing Plate number details Entered ", LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathPortableTransponder)).clear();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathPortableTransponder)).sendKeys(deviceNumber1);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiniStickerTransponder)).clear();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiniStickerTransponder)).sendKeys(deviceNumber2);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Transponder Information Added ", LogStatus.INFO, false);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathPlansAndPayment)).click();

        String xpathErrorMessage="//div[@class='alert alert-danger error_msg']";
        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathErrorMessage)));

        WebElement ErrorMessage=FunctionLibrary.objDriver.findElement(By.xpath(xpathErrorMessage));
        System.out.println(ErrorMessage.getText());





        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Validation Message Displayed: "+ErrorMessage.getText(), LogStatus.PASS, true);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Excepted:<b> Error message is displayed indicating the plate number already exists and cannot proceed to the next page.</b> Actual : <b> "+ErrorMessage.getText()+"</b>", LogStatus.INFO, false);






    }

    public static void tcAccountCreationWebACEW053() throws Exception{
        String Desc;
        String firstName=dataObj.get("First Name");
        String middleName=dataObj.get("Middle Name");
        String lastName=dataObj.get("Last Name");
        String address1=dataObj.get("Mailing Address1");
        String address2=dataObj.get("Mailing Address2");
        String city=dataObj.get("City");
        String state=dataObj.get("State");
        String zip=dataObj.get("Zip Code");
        String country=dataObj.get("Country");
        String email=dataObj.get("Email");
        String phone=dataObj.get("Phone");
        String phoneType=dataObj.get("Phone Type");
        String language = dataObj.get("Preferred Language");
        String statementType = dataObj.get("Statement Type");
        String securityQuestion=dataObj.get("Security Question");
        String securityAnswer=dataObj.get("Security Answer");
        String userName=firstName+DateTime.now().getMillisOfSecond() + DateTime.now().getSecondOfMinute() + DateTime.now().getMillisOfSecond();
        String password=dataObj.get("Password1");
        String pin=dataObj.get("Pin");
        String cardType=dataObj.get("Card Type");
        String cardNumber=dataObj.get("Card Number");
        String cardExpMonth=dataObj.get("Exp Month");
        String cardExpYear=dataObj.get("Exp Year");
        String cardCcvNumber=dataObj.get("Ccv Number");
        String deviceNumber1 = dataObj.get("Device Count1");
        String deviceNumber2 = dataObj.get("Device Count2");


        int deviceCount1 = Integer.parseInt(deviceNumber1);
        int deviceCount2 = Integer.parseInt(deviceNumber2);
        int totalDevices = deviceCount1 + deviceCount2;

        int totalCost = totalDevices*10;

        String totalVehicles = ""+totalDevices;

        String totalValue = "$"+totalCost+".00";
        CommonLibrary.launchBrowser(dataObj.get("WEB_URL").toString(),"Launching siebel app", dataObj.get("Browser Type"));
        FunctionLibrary.objDriver.manage().deleteAllCookies();


        FunctionLibrary.objDriver.findElement(By.xpath(xpathFirstName)).sendKeys(firstName);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiddleName)).sendKeys(middleName);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathLastName)).sendKeys(lastName);

        FunctionLibrary.objDriver.findElement(By.xpath("//input[@name='companyName']")).sendKeys("xerox");
        FunctionLibrary.objDriver.findElement(By.xpath("//input[@name='dbaName']")).sendKeys("services");
        FunctionLibrary.objDriver.findElement(By.xpath("//input[@name='fein']")).sendKeys("123456789");

        FunctionLibrary.objDriver.findElement(By.xpath(xpathAddress1)).sendKeys(address1);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathAddress2)).sendKeys(address2);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathZipCode)).sendKeys(zip);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCity)).sendKeys(city);
        FunctionLibrary.selectDropDownListByValue(xpathState,state,"");
        FunctionLibrary.selectDropDownListByValue(xpathCountry,country,"");
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Adding account details in first page", LogStatus.INFO, true);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathEmail)).sendKeys(email);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathReEmail)).sendKeys(email);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCellPhone)).sendKeys(phone);
       // FunctionLibrary.selectDropDownListByValue(xpathPhoneType,phoneType,"");
        FunctionLibrary.selectDropDownListByValue(xpathLanguageType,language,"");
        FunctionLibrary.selectDropDownListByValue(xpathStatemenType,statementType,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathUserName)).sendKeys(userName);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathPassword)).sendKeys(password);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathReTypePassword)).sendKeys(password);
        FunctionLibrary.selectDropDownListByValue(xpathSecurityQuestion,securityQuestion,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathSecurityAnswer)).sendKeys(securityAnswer);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathIpin)).sendKeys(pin);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Adding account details in first page", LogStatus.INFO, true);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCommunicationPreferencesBtn)).click();



        WebDriverWait wait1 = new WebDriverWait(FunctionLibrary.objDriver, 20);
        wait1.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathStandardizeRadioButton)));



//                    FunctionLibrary.objDriver.findElement(By.xpath(standardizeRadioButton)).click();

//        wait1.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathStandardizeOkButton)));
        //       FunctionLibrary.objDriver.findElement(By.xpath(xpathStandardizeOkButton)).click();
        FunctionLibrary.waitForObjectIfNotPresentThenClickPreviousEleToMakeThisObjVisibleWebapp(xpathTollTagsVehiclesButton,xpathStandardizeOkButton,10,50);

        String url = FunctionLibrary.objDriver.getCurrentUrl();
        if (url.contains("500")){
            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "On clicking Standardization it is showing error page", LogStatus.FAIL, true);
            FunctionLibrary.objDriver.navigate().back();
            wait1.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathStandardizeRadioButton)));
            Thread.sleep(5000);
            wait1.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathStandardizeOkButton)));
            FunctionLibrary.objDriver.findElement(By.xpath(xpathStandardizeOkButton)).click();
        }

        WebDriverWait wait2 = new WebDriverWait(FunctionLibrary.objDriver, 300);
        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathTollTagsVehiclesButton)));
        wait2.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathTollTagsVehiclesButton)));
        new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();

        //FunctionLibrary.objDriver.findElement(By.xpath(xpathTollTagsVehiclesButton)).click();

        FunctionLibrary.waitForObjectIfNotPresentThenClickPreviousEleToMakeThisObjVisibleWebapp(xpathVehicle,xpathTollTagsVehiclesButton,5,50);

        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathVehicle)));
        //adding vehicles
      //++++++++++  CommonLibrary.webApplicationAddVehicles(101);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathPortableTransponder)).clear();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathPortableTransponder)).sendKeys(deviceNumber1);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiniStickerTransponder)).clear();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiniStickerTransponder)).sendKeys(deviceNumber2);
        new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.TAB)).perform();


        String totalValueActual = FunctionLibrary.objDriver.findElement(By.xpath(xpathTotalAmount)).getText();

        System.out.println(totalValueActual);
        System.out.println(totalValue);

        if(!totalValue.equalsIgnoreCase(totalValueActual)){
            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Total amount is not correct <br>"+ "Expected Value: "+totalValue+"Actual Value: "+ totalValueActual, LogStatus.FAIL, true);
        }

        else{
            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Total amount is displayed correctly"
                    + "Expected Value: "+totalValue+"Actual Value: "+ totalValueActual, LogStatus.PASS, true);
        }
        FunctionLibrary.objDriver.findElement(By.xpath(xpathPlansAndPayment)).click();



    }
    /**
     * Created By: Bharath
     * Test Case: ACEW-037
     *  Test Case Description:Fleet account creation adding 101 vehicles.
     *@throws IOException
     */
    public static void tcAccountCreationWebACEW037() throws Exception{

        String Desc;
        String firstName=dataObj.get("First Name");
        String middleName=dataObj.get("Middle Name");
        String lastName=dataObj.get("Last Name");
        String address1=dataObj.get("Mailing Address1");
        String address2=dataObj.get("Mailing Address2");
        String city=dataObj.get("City");
        String state=dataObj.get("State");
        String zip=dataObj.get("Zip Code");
        String country=dataObj.get("Country");
        String email=dataObj.get("Email");
        String phone=dataObj.get("Phone");
        String phoneType=dataObj.get("Phone Type");
        String securityQuestion=dataObj.get("Security Question");
        String securityAnswer=dataObj.get("Security Answer");
        String userName=firstName+DateTime.now().getMillisOfSecond() + DateTime.now().getSecondOfMinute() + DateTime.now().getMillisOfSecond();
        String password=dataObj.get("Password1");
        String pin=dataObj.get("Pin");
        String cardType=dataObj.get("Card Type");
        String cardNumber=dataObj.get("Card Number");
        String cardExpMonth=dataObj.get("Exp Month");
        String cardExpYear=dataObj.get("Exp Year");
        String cardCcvNumber=dataObj.get("Ccv Number");
        String deviceNumber1 = dataObj.get("Device Count1");
        String deviceNumber2 = dataObj.get("Device Count2");
        int deviceCount1 = Integer.parseInt(deviceNumber1);
        int deviceCount2 = Integer.parseInt(deviceNumber2);
        int totalDevices = deviceCount1 + deviceCount2;
        int totalCost = totalDevices*10;


        FunctionLibrary.objDriver.findElement(By.xpath(xpathFirstName)).sendKeys(firstName);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiddleName)).sendKeys(middleName);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathLastName)).sendKeys(lastName);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathAddress1)).sendKeys(address1);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathAddress2)).sendKeys(address2);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathZipCode)).sendKeys(zip);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCity)).sendKeys(city);
        FunctionLibrary.selectDropDownListByValue(xpathState,state,"");
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Adding account details in first page", LogStatus.INFO, true);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathEmail)).sendKeys(email);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathReEmail)).sendKeys(email);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCellPhone)).sendKeys(phone);
        //FunctionLibrary.selectDropDownListByValue(xpathPhoneType,phoneType,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathUserName)).sendKeys(userName);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "User Name ="+userName +"Password ="+password, LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathPassword)).sendKeys(password);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathReTypePassword)).sendKeys(password);
        FunctionLibrary.selectDropDownListByValue(xpathSecurityQuestion,securityQuestion,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathSecurityAnswer)).sendKeys(securityAnswer);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathIpin)).sendKeys(pin);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Adding account details in first page", LogStatus.INFO, true);

       Thread.sleep(10000);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCommunicationPreferencesBtn)).click();



        WebDriverWait wait1 = new WebDriverWait(FunctionLibrary.objDriver, 20);
        wait1.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathStandardizeRadioButton)));

        Thread.sleep(5000);

//                    FunctionLibrary.objDriver.findElement(By.xpath(standardizeRadioButton)).click();

        wait1.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathStandardizeOkButton)));
        FunctionLibrary.objDriver.findElement(By.xpath(xpathStandardizeOkButton)).click();

        String url = FunctionLibrary.objDriver.getCurrentUrl();
        if (url.contains("500")){
            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "On clicking Standardization it is showing error page", LogStatus.FAIL, true);
            FunctionLibrary.objDriver.navigate().back();
            wait1.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathStandardizeRadioButton)));
            Thread.sleep(5000);
            wait1.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathStandardizeOkButton)));
            FunctionLibrary.objDriver.findElement(By.xpath(xpathStandardizeOkButton)).click();
        }

        WebDriverWait wait2 = new WebDriverWait(FunctionLibrary.objDriver, 300);
        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathTollTagsVehiclesButton)));
        wait2.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathTollTagsVehiclesButton)));
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Communication Preferences Added ", LogStatus.INFO, true);


        new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();
        Thread.sleep(10000);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathTollTagsVehiclesButton)).click();

        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathVehicle)));
        //adding vehicles
        CommonLibrary.webApplicationAddVehicles(totalDevices);
        Thread.sleep(10000);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Vehicle Information Added ", LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathPortableTransponder)).clear();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathPortableTransponder)).sendKeys(deviceNumber1);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiniStickerTransponder)).clear();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiniStickerTransponder)).sendKeys(deviceNumber2);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Transponder Information Added ", LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathPlansAndPayment)).click();

        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//select[@name='creditCardType']")));
        FunctionLibrary.selectDropDownListByValue(xpathCardType,cardType,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCardNumber)).sendKeys(cardNumber);
        FunctionLibrary.selectDropDownListByValue(xpathCardExpMonth,cardExpMonth,"");
        FunctionLibrary.selectDropDownListByValue(xpathCardExpYear,cardExpYear,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCardSecurityCode)).sendKeys(cardCcvNumber);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Primary Card Details Added ", LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathConfirmation)).click();

        System.out.println("conf");



        new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Billing Address Details are auto populated ", LogStatus.INFO, true);

        new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();
        //wait2.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathAgreeCheckBox)));
        //element is not clickable exception is coming, even after giving webdriver wait, so giving Thread.sleep

        Thread.sleep(12000);

        FunctionLibrary.scrollDowntoElement("xpath=.//*[@class='icheckbox_minimal']","Scroll down");

        try
        {
            FunctionLibrary.objDriver.navigate().refresh();
            FunctionLibrary.scrollDowntoElement("xpath=.//*[@class='icheckbox_minimal']","Scroll down");
            // WebElement element = FunctionLibrary.objDriver.findElement(By.xpath("//div[@class='icheckbox_minimal']"));
            WebElement element =FunctionLibrary.objDriver.findElement(By.xpath(".//*[@class='icheckbox_minimal']"));

            System.out.println("click try in try block");
            element.click();

            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Confirmation Page Terms & Conditions Checked ", LogStatus.INFO, true);

        }
        catch(Exception e)
        {
            System.out.println("click try in catch block");
            FunctionLibrary.waitForObject.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@class='icheckbox_minimal']")));

            // FunctionLibrary.objDriver.findElement(By.xpath(".//*[@class='icheckbox_minimal']")).click();
        }
        // WebElement element = FunctionLibrary.objDriver.findElement(By.xpath(xpathAgreeCheckBox));
        // new Actions(FunctionLibrary.objDriver).moveToElement(element).click();

        //  FunctionLibrary.objDriver.findElement(By.xpath("(//*[@id='agreeChk'])[2]")).click();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCompleteButton)).click();
        //  FunctionLibrary.objDriver.findElement(By.id("agreeChk")).click();


        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//h1[@class='page-header-noborder']")));
        String message = FunctionLibrary.objDriver.findElement(By.xpath("//h1[@class='page-header-noborder']")).getText();
        System.out.println(message);
        String[] accountArray = message.split(" ");
        System.out.println(accountArray[12]);
        String accountNumber = accountArray[12].replace('.',' ').trim();
        System.out.println(accountNumber);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Account # Generated "+accountNumber +" ", LogStatus.PASS, false);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Account # Generated Success Message ", LogStatus.PASS, false);

        det(accountNumber);


    }

    /**
     * Created By: Bharath
     * Test Case: ACEW-039
     *  Test Case Description:Payment processing unsuccessful during Prepaid account creation.
     *@throws IOException
     */
    public static void tcAccountCreationWebACEW039() throws Exception{

        String Desc;
        String firstName=dataObj.get("First Name");
        String middleName=dataObj.get("Middle Name");
        String lastName=dataObj.get("Last Name");
        String address1=dataObj.get("Mailing Address1");
        String address2=dataObj.get("Mailing Address2");
        String city=dataObj.get("City");
        String state=dataObj.get("State");
        String zip=dataObj.get("Zip Code");
        String country=dataObj.get("Country");
        String email=dataObj.get("Email");
        String phone=dataObj.get("Phone");
        String phoneType=dataObj.get("Phone Type");
        String securityQuestion=dataObj.get("Security Question");
        String securityAnswer=dataObj.get("Security Answer");
        String userName=firstName+DateTime.now().getMillisOfSecond() + DateTime.now().getSecondOfMinute() + DateTime.now().getMillisOfSecond();
        String password=dataObj.get("Password1");
        String pin=dataObj.get("Pin");
        String cardType=dataObj.get("Card Type");
        String cardNumber=dataObj.get("Card Number");
        String cardExpMonth=dataObj.get("Exp Month");
        String cardExpYear=dataObj.get("Exp Year");
        String cardCcvNumber=dataObj.get("Ccv Number");
        String deviceNumber1 = dataObj.get("Device Count1");
        String deviceNumber2 = dataObj.get("Device Count2");
        int deviceCount1 = Integer.parseInt(deviceNumber1);
        int deviceCount2 = Integer.parseInt(deviceNumber2);
        int totalDevices = deviceCount1 + deviceCount2;
        int totalCost = totalDevices*10;


        FunctionLibrary.objDriver.findElement(By.xpath(xpathFirstName)).sendKeys(firstName);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiddleName)).sendKeys(middleName);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathLastName)).sendKeys(lastName);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathAddress1)).sendKeys(address1);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathAddress2)).sendKeys(address2);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathZipCode)).sendKeys(zip);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCity)).sendKeys(city);
        FunctionLibrary.selectDropDownListByValue(xpathState,state,"");
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Adding account details in first page", LogStatus.INFO, true);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathEmail)).sendKeys(email);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathReEmail)).sendKeys(email);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCellPhone)).sendKeys(phone);
      //  FunctionLibrary.selectDropDownListByValue(xpathPhoneType,phoneType,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathUserName)).sendKeys(userName);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathPassword)).sendKeys(password);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "User Name ="+userName +"Password ="+password, LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathReTypePassword)).sendKeys(password);
        FunctionLibrary.selectDropDownListByValue(xpathSecurityQuestion,securityQuestion,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathSecurityAnswer)).sendKeys(securityAnswer);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathIpin)).sendKeys(pin);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Adding account details in first page", LogStatus.INFO, true);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCommunicationPreferencesBtn)).click();



        WebDriverWait wait1 = new WebDriverWait(FunctionLibrary.objDriver, 20);
        wait1.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathStandardizeRadioButton)));

        Thread.sleep(5000);

//                    FunctionLibrary.objDriver.findElement(By.xpath(standardizeRadioButton)).click();

        wait1.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathStandardizeOkButton)));
        FunctionLibrary.objDriver.findElement(By.xpath(xpathStandardizeOkButton)).click();

        String url = FunctionLibrary.objDriver.getCurrentUrl();
        if (url.contains("500")){
            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "On clicking Standardization it is showing error page", LogStatus.FAIL, true);
            FunctionLibrary.objDriver.navigate().back();
            wait1.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathStandardizeRadioButton)));
            Thread.sleep(5000);
            wait1.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathStandardizeOkButton)));
            FunctionLibrary.objDriver.findElement(By.xpath(xpathStandardizeOkButton)).click();
        }

        WebDriverWait wait2 = new WebDriverWait(FunctionLibrary.objDriver, 300);
        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathTollTagsVehiclesButton)));
        wait2.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathTollTagsVehiclesButton)));
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Communication Preferences Added ", LogStatus.INFO, true);

        new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();
        Thread.sleep(10000);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathTollTagsVehiclesButton)).click();

        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathVehicle)));
        //adding vehicles
        CommonLibrary.webApplicationAddVehicles(totalDevices);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Vehicle Information Added ", LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathPortableTransponder)).clear();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathPortableTransponder)).sendKeys(deviceNumber1);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiniStickerTransponder)).clear();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiniStickerTransponder)).sendKeys(deviceNumber2);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathPlansAndPayment)).click();



        String BankAccountType=dataObj.get("Account Type");
        String BankNameOnAccount=dataObj.get("Name On Account");
        String BankAccountNumber=dataObj.get("Bank Account Number");
        String BankRoutingNumber=dataObj.get("Bank Routing Number");


        try
        {
            Thread.sleep(1000);
            FunctionLibrary.objDriver.navigate().refresh();
            FunctionLibrary.waitForObject.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathBankAccount)));
            WebElement element =FunctionLibrary.objDriver.findElement(By.xpath(xpathBankAccount));
            System.out.println("click try in try block");
            element.click();
            System.out.println("click try in try block");
            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Primary card Details Bank account Payment is Selected ", LogStatus.INFO, true);

        }
        catch(Exception e)
        {
            System.out.println("click try in catch block");
            FunctionLibrary.waitForObject.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathBankAccount)));
            FunctionLibrary.objDriver.findElement(By.xpath(xpathBankAccount)).click();
        }

        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathBankAccountType)));
        FunctionLibrary.selectDropDownListByValue(xpathBankAccountType,BankAccountType,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathBankNameOnAccount)).sendKeys(BankNameOnAccount);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathBankAccountNumber)).sendKeys(BankAccountNumber);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathRetypeBankAccountNumber)).sendKeys(BankAccountNumber);
       // FunctionLibrary.objDriver.findElement(By.xpath(xpathBankRoutingNumber)).sendKeys(BankRoutingNumber);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Transponder Information Added ", LogStatus.INFO, true);

        Thread.sleep(5000);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathConfirmation)).click();

        System.out.println("Confirmation Page");

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Account # Not Generated ", LogStatus.PASS, false);
        WebElement ref=FunctionLibrary.objDriver.findElement(By.xpath("(.//div[@class='form-group row'])[1]"));
        System.out.println(ref.getText());
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Reference number is is Displayed "+ref.getText(), LogStatus.PASS, true);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Excepted:<b> Account is not created.</b> Actual : <b> Account is not created. </b>", LogStatus.PASS, false);


        /*new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Billing Address Details are auto populated ", LogStatus.INFO, true);

        new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();
        //wait2.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathAgreeCheckBox)));
        //element is not clickable exception is coming, even after giving webdriver wait, so giving Thread.sleep

        Thread.sleep(12000);

        FunctionLibrary.scrollDowntoElement("xpath=.*//*//**//*[@class='icheckbox_minimal']","Scroll down");

        try
        {
            FunctionLibrary.objDriver.navigate().refresh();
            FunctionLibrary.scrollDowntoElement("xpath=.*//*//**//*[@class='icheckbox_minimal']","Scroll down");
            WebElement element =FunctionLibrary.objDriver.findElement(By.xpath(xpathTermsAndConditions));

            System.out.println("click try in try block");
            element.click();

            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Confirmation Page Terms & Conditions Checked ", LogStatus.INFO, true);

        }
        catch(Exception e)
        {
            System.out.println("click try in catch block");
            FunctionLibrary.waitForObject.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathTermsAndConditions)));
            FunctionLibrary.objDriver.findElement(By.xpath(xpathTermsAndConditions)).click();
        }

        FunctionLibrary.objDriver.findElement(By.xpath(xpathCompleteButton)).click();
        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//h1[@class='page-header-noborder']")));
        String message = FunctionLibrary.objDriver.findElement(By.xpath("//h1[@class='page-header-noborder']")).getText();
        System.out.println(message);
        String[] accountArray = message.split(" ");
        System.out.println(accountArray[12]);
        String accountNumber = accountArray[12].replace('.',' ').trim();

        System.out.println(accountNumber);

*/
    }

    /**
     * Created By: Bharath
     * Test Case: ACEW-048
     *  Test Case Description: Click on Browse Back button from the Payment Confirmation page.
     *@throws IOException
     */
    public static void tcAccountCreationWebACEW048() throws Exception{

        String Desc;
        String firstName=dataObj.get("First Name");
        String middleName=dataObj.get("Middle Name");
        String lastName=dataObj.get("Last Name");
        String address1=dataObj.get("Mailing Address1");
        String address2=dataObj.get("Mailing Address2");
        String city=dataObj.get("City");
        String state=dataObj.get("State");
        String zip=dataObj.get("Zip Code");
        String country=dataObj.get("Country");
        String email=dataObj.get("Email");
        String phone=dataObj.get("Phone");
        String phoneType=dataObj.get("Phone Type");
        String securityQuestion=dataObj.get("Security Question");
        String securityAnswer=dataObj.get("Security Answer");
        String userName=firstName+DateTime.now().getMillisOfSecond() + DateTime.now().getSecondOfMinute() + DateTime.now().getMillisOfSecond();
        String password=dataObj.get("Password1");
        String pin=dataObj.get("Pin");
        String cardType=dataObj.get("Card Type");
        String cardNumber=dataObj.get("Card Number");
        String cardExpMonth=dataObj.get("Exp Month");
        String cardExpYear=dataObj.get("Exp Year");
        String cardCcvNumber=dataObj.get("Ccv Number");
        String deviceNumber1 = dataObj.get("Device Count1");
        String deviceNumber2 = dataObj.get("Device Count2");
        int deviceCount1 = Integer.parseInt(deviceNumber1);
        int deviceCount2 = Integer.parseInt(deviceNumber2);
        int totalDevices = deviceCount1 + deviceCount2;
        int totalCost = totalDevices*10;

        CommonLibrary.launchBrowser(dataObj.get("WEB_URL").toString(),"Launching siebel app", dataObj.get("Browser Type"));
        FunctionLibrary.objDriver.manage().deleteAllCookies();


        FunctionLibrary.objDriver.findElement(By.xpath(xpathFirstName)).sendKeys(firstName);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiddleName)).sendKeys(middleName);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathLastName)).sendKeys(lastName);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathAddress1)).sendKeys(address1);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathAddress2)).sendKeys(address2);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathZipCode)).sendKeys(zip);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCity)).sendKeys(city);
        FunctionLibrary.selectDropDownListByValue(xpathState,state,"");
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Adding account details in first page", LogStatus.INFO, true);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathEmail)).sendKeys(email);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathReEmail)).sendKeys(email);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCellPhone)).sendKeys(phone);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Email Validated"+email, LogStatus.PASS, false);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Phone Validated"+phone, LogStatus.PASS, false);


       // FunctionLibrary.selectDropDownListByValue(xpathPhoneType,phoneType,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathUserName)).sendKeys(userName);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "User Name ="+userName +"Password ="+password, LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathPassword)).sendKeys(password);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathReTypePassword)).sendKeys(password);
        FunctionLibrary.selectDropDownListByValue(xpathSecurityQuestion,securityQuestion,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathSecurityAnswer)).sendKeys(securityAnswer);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathIpin)).sendKeys(pin);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Adding account details in first page", LogStatus.INFO, true);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCommunicationPreferencesBtn)).click();



        WebDriverWait wait1 = new WebDriverWait(FunctionLibrary.objDriver, 20);
        wait1.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathStandardizeRadioButton)));

        //  Thread.sleep(5000);


        wait1.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathStandardizeOkButton)));
        FunctionLibrary.objDriver.findElement(By.xpath(xpathStandardizeOkButton)).click();

        String url = FunctionLibrary.objDriver.getCurrentUrl();
        if (url.contains("500")){
            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "On clicking Standardization it is showing error page", LogStatus.FAIL, true);
            FunctionLibrary.objDriver.navigate().back();
            wait1.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathStandardizeRadioButton)));
            Thread.sleep(5000);
            wait1.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathStandardizeOkButton)));
            FunctionLibrary.objDriver.findElement(By.xpath(xpathStandardizeOkButton)).click();
        }

        WebDriverWait wait2 = new WebDriverWait(FunctionLibrary.objDriver, 300);
        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathTollTagsVehiclesButton)));
        addCommunicationPreferences();
        wait2.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathTollTagsVehiclesButton)));
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Communication Preferences Added ", LogStatus.INFO, true);
        new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();
        //wait2.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathTollTagsVehiclesButton)));
        Thread.sleep(10000);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathTollTagsVehiclesButton)).click();

        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathVehicle)));
        //adding vehicles
        CommonLibrary.webApplicationAddVehicles(totalDevices);
        Thread.sleep(10000);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Vehicle Information Added ", LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathPortableTransponder)).clear();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathPortableTransponder)).sendKeys(deviceNumber1);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiniStickerTransponder)).clear();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiniStickerTransponder)).sendKeys(deviceNumber2);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Transponder Information Added ", LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathPlansAndPayment)).click();

        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//select[@name='creditCardType']")));
        FunctionLibrary.selectDropDownListByValue(xpathCardType,cardType,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCardNumber)).sendKeys(cardNumber);
        FunctionLibrary.selectDropDownListByValue(xpathCardExpMonth,cardExpMonth,"");
        FunctionLibrary.selectDropDownListByValue(xpathCardExpYear,cardExpYear,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCardSecurityCode)).sendKeys(cardCcvNumber);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Primary Card Details Added ", LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathConfirmation)).click();
        Thread.sleep(5000);
        System.out.println("conf");

        FunctionLibrary.objDriver.navigate().back();

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Clicked on Browse Back Button ", LogStatus.INFO, true);


        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Account # Not Generated ", LogStatus.PASS, false);
        WebElement ref=FunctionLibrary.objDriver.findElement(By.xpath("(.//div[@class='form-group row'])[1]"));
        System.out.println(ref.getText());
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Reference number is is Displayed "+ref.getText(), LogStatus.PASS, true);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Excepted:<b> Account is not created.</b> Actual : <b> Account is not created. </b>", LogStatus.PASS, false);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Excepted:<b> Navigate back to the previous account details page.</b> Actual : <b> Navigate back to the previous account details page. </b>", LogStatus.PASS, true);


    }

    /**
     * Created By: Bharath
     * Test Case: ACEW-049
     *  Test Case Description: Click on Cancel button to not proceed to next page and confirm the OK on warning message.
     *@throws IOException
     */
    public static void tcAccountCreationWebACEW049() throws Exception{

        String Desc;
        String firstName=dataObj.get("First Name");
        String middleName=dataObj.get("Middle Name");
        String lastName=dataObj.get("Last Name");
        String address1=dataObj.get("Mailing Address1");
        String address2=dataObj.get("Mailing Address2");
        String city=dataObj.get("City");
        String state=dataObj.get("State");
        String zip=dataObj.get("Zip Code");
        String country=dataObj.get("Country");
        String email=dataObj.get("Email");
        String phone=dataObj.get("Phone");
        String phoneType=dataObj.get("Phone Type");
        String securityQuestion=dataObj.get("Security Question");
        String securityAnswer=dataObj.get("Security Answer");
        String userName=firstName+DateTime.now().getMillisOfSecond() + DateTime.now().getSecondOfMinute() + DateTime.now().getMillisOfSecond();
        String password=dataObj.get("Password1");
        String pin=dataObj.get("Pin");
        String cardType=dataObj.get("Card Type");
        String cardNumber=dataObj.get("Card Number");
        String cardExpMonth=dataObj.get("Exp Month");
        String cardExpYear=dataObj.get("Exp Year");
        String cardCcvNumber=dataObj.get("Ccv Number");
        String deviceNumber1 = dataObj.get("Device Count1");
        String deviceNumber2 = dataObj.get("Device Count2");
        int deviceCount1 = Integer.parseInt(deviceNumber1);
        int deviceCount2 = Integer.parseInt(deviceNumber2);
        int totalDevices = deviceCount1 + deviceCount2;
        int totalCost = totalDevices*10;

        CommonLibrary.launchBrowser(dataObj.get("WEB_URL").toString(),"Launching siebel app", dataObj.get("Browser Type"));
        FunctionLibrary.objDriver.manage().deleteAllCookies();


        FunctionLibrary.objDriver.findElement(By.xpath(xpathFirstName)).sendKeys(firstName);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiddleName)).sendKeys(middleName);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathLastName)).sendKeys(lastName);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathAddress1)).sendKeys(address1);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathAddress2)).sendKeys(address2);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathZipCode)).sendKeys(zip);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCity)).sendKeys(city);
        FunctionLibrary.selectDropDownListByValue(xpathState,state,"");
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Adding account details in first page", LogStatus.INFO, true);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathEmail)).sendKeys(email);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathReEmail)).sendKeys(email);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCellPhone)).sendKeys(phone);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Email Validated"+email, LogStatus.PASS, false);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Phone Validated"+phone, LogStatus.PASS, false);


       // FunctionLibrary.selectDropDownListByValue(xpathPhoneType,phoneType,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathUserName)).sendKeys(userName);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "User Name ="+userName +"Password ="+password, LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathPassword)).sendKeys(password);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathReTypePassword)).sendKeys(password);
        FunctionLibrary.selectDropDownListByValue(xpathSecurityQuestion,securityQuestion,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathSecurityAnswer)).sendKeys(securityAnswer);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathIpin)).sendKeys(pin);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Adding account details in first page", LogStatus.INFO, true);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCommunicationPreferencesBtn)).click();



        WebDriverWait wait1 = new WebDriverWait(FunctionLibrary.objDriver, 20);
        wait1.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathStandardizeRadioButton)));

        //  Thread.sleep(5000);


        wait1.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathStandardizeOkButton)));
        FunctionLibrary.objDriver.findElement(By.xpath(xpathStandardizeOkButton)).click();

        String url = FunctionLibrary.objDriver.getCurrentUrl();
        if (url.contains("500")){
            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "On clicking Standardization it is showing error page", LogStatus.FAIL, true);
            FunctionLibrary.objDriver.navigate().back();
            wait1.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathStandardizeRadioButton)));
            Thread.sleep(5000);
            wait1.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathStandardizeOkButton)));
            FunctionLibrary.objDriver.findElement(By.xpath(xpathStandardizeOkButton)).click();
        }

        WebDriverWait wait2 = new WebDriverWait(FunctionLibrary.objDriver, 300);
        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathTollTagsVehiclesButton)));
        addCommunicationPreferences();
        wait2.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathTollTagsVehiclesButton)));
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Communication Preferences Added ", LogStatus.INFO, true);
        new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();
        //wait2.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathTollTagsVehiclesButton)));
        Thread.sleep(10000);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathTollTagsVehiclesButton)).click();

        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathVehicle)));
        //adding vehicles
        CommonLibrary.webApplicationAddVehicles(totalDevices);
        Thread.sleep(10000);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Vehicle Information Added ", LogStatus.INFO, true);

        String xpathCancel="//a[contains(text(),' CANCEL ')]";
        String xpathCancelMessage="(//div[@class='modal-body'])[1]";
        String xpathConfirmCalcelOk="(//*[@class='btn btn-submit btn-block'])[1]";
        wait2.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathCancel)));
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCancel)).click();
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Cancel Button Clicked Without Clicking Continue Button ", LogStatus.INFO, false);
        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathCancelMessage)));

        //  Thread.sleep(4000);
        WebElement ConfirmCancel=FunctionLibrary.objDriver.findElement(By.xpath(xpathCancelMessage));
        System.out.println(ConfirmCancel.getText());
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Expected : <b> Warning Message Displayed "+ConfirmCancel.getText()+"</b>  Actual : <b> Warning Message Displayed "+ConfirmCancel.getText()+"</b>", LogStatus.PASS, true);

        // Thread.sleep(4000);
        WebElement ConfirmOk=FunctionLibrary.objDriver.findElement(By.xpath(xpathConfirmCalcelOk));
        System.out.println(ConfirmOk.getText());
        Thread.sleep(4000);
        ConfirmOk.click();

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Clicked on Confirm cancel OK Button ", LogStatus.PASS, false);


        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Account # Not Generated ", LogStatus.PASS, true);
        /*WebElement ref=FunctionLibrary.objDriver.findElement(By.xpath("(.//div[@class='form-group row'])[1]"));
        System.out.println(ref.getText());
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Reference number is is Displayed "+ref.getText(), LogStatus.PASS, true);
      //  ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Excepted:<b> Account is not created.</b> Actual : <b> Account is not created. </b>", LogStatus.PASS, false);
       */ ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "<b> Customer taken back to the Signup page; a warning is displayed regarding the loss of information and customer has to confirm the OK; customer re-enters all the details.</b> ", LogStatus.PASS, true);


    }

    /**
     * Created By: Bharath
     * Test Case: ACEW-051
     *  Test Case Description: Create account after the reference ID has been generated.
     *@throws IOException
     */
    public static void tcAccountCreationWebACEW051() throws Exception{

        String Desc;
        String firstName=dataObj.get("First Name");
        String middleName=dataObj.get("Middle Name");
        String lastName=dataObj.get("Last Name");
        String address1=dataObj.get("Mailing Address1");
        String address2=dataObj.get("Mailing Address2");
        String city=dataObj.get("City");
        String state=dataObj.get("State");
        String zip=dataObj.get("Zip Code");
        String country=dataObj.get("Country");
        String email=dataObj.get("Email");
        String phone=dataObj.get("Phone");
        String phoneType=dataObj.get("Phone Type");
        String securityQuestion=dataObj.get("Security Question");
        String securityAnswer=dataObj.get("Security Answer");
        String userName=firstName+DateTime.now().getMillisOfSecond() + DateTime.now().getSecondOfMinute() + DateTime.now().getMillisOfSecond();
        String password=dataObj.get("Password1");
        String pin=dataObj.get("Pin");
        String cardType=dataObj.get("Card Type");
        String cardNumber=dataObj.get("Card Number");
        String cardExpMonth=dataObj.get("Exp Month");
        String cardExpYear=dataObj.get("Exp Year");
        String cardCcvNumber=dataObj.get("Ccv Number");
        String deviceNumber1 = dataObj.get("Device Count1");
        String deviceNumber2 = dataObj.get("Device Count2");
        int deviceCount1 = Integer.parseInt(deviceNumber1);
        int deviceCount2 = Integer.parseInt(deviceNumber2);
        int totalDevices = deviceCount1 + deviceCount2;
        int totalCost = totalDevices*10;

        CommonLibrary.launchBrowser(dataObj.get("WEB_URL").toString(),"Launching Web App account Creation Page", dataObj.get("Browser Type"));
        FunctionLibrary.objDriver.manage().deleteAllCookies();


        FunctionLibrary.objDriver.findElement(By.xpath(xpathFirstName)).sendKeys(firstName);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiddleName)).sendKeys(middleName);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathLastName)).sendKeys(lastName);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathAddress1)).sendKeys(address1);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathAddress2)).sendKeys(address2);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathZipCode)).sendKeys(zip);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCity)).sendKeys(city);
        FunctionLibrary.selectDropDownListByValue(xpathState,state,"");
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Adding account details in first page", LogStatus.INFO, true);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathEmail)).sendKeys(email);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathReEmail)).sendKeys(email);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCellPhone)).sendKeys(phone);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Email Validated"+email, LogStatus.PASS, false);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Phone Validated"+phone, LogStatus.PASS, false);


       // FunctionLibrary.selectDropDownListByValue(xpathPhoneType,phoneType,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathUserName)).sendKeys(userName);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "User Name ="+userName +"Password ="+password, LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathPassword)).sendKeys(password);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathReTypePassword)).sendKeys(password);
        FunctionLibrary.selectDropDownListByValue(xpathSecurityQuestion,securityQuestion,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathSecurityAnswer)).sendKeys(securityAnswer);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathIpin)).sendKeys(pin);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Adding account details in first page", LogStatus.INFO, true);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCommunicationPreferencesBtn)).click();



        WebDriverWait wait1 = new WebDriverWait(FunctionLibrary.objDriver, 20);
        wait1.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathStandardizeRadioButton)));

        Thread.sleep(5000);

//                    FunctionLibrary.objDriver.findElement(By.xpath(standardizeRadioButton)).click();

        wait1.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathStandardizeOkButton)));
        FunctionLibrary.objDriver.findElement(By.xpath(xpathStandardizeOkButton)).click();

        String url = FunctionLibrary.objDriver.getCurrentUrl();
        if (url.contains("500")){
            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "On clicking Standardization it is showing error page", LogStatus.FAIL, true);
            FunctionLibrary.objDriver.navigate().back();
            wait1.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathStandardizeRadioButton)));
            Thread.sleep(5000);
            wait1.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathStandardizeOkButton)));
            FunctionLibrary.objDriver.findElement(By.xpath(xpathStandardizeOkButton)).click();
        }

        WebDriverWait wait2 = new WebDriverWait(FunctionLibrary.objDriver, 300);
        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathTollTagsVehiclesButton)));
        wait2.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathTollTagsVehiclesButton)));
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Communication Preferences Added ", LogStatus.INFO, true);


        new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();
        Thread.sleep(10000);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathTollTagsVehiclesButton)).click();

        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathVehicle)));
        //adding vehicles
        CommonLibrary.webApplicationAddVehicles(totalDevices);
        Thread.sleep(10000);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Vehicle Information Added ", LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathPortableTransponder)).clear();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathPortableTransponder)).sendKeys(deviceNumber1);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiniStickerTransponder)).clear();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiniStickerTransponder)).sendKeys(deviceNumber2);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Transponder Information Added ", LogStatus.INFO, true);

        WebElement ref=FunctionLibrary.objDriver.findElement(By.xpath("(.//div[@class='form-group row'])[1]"));
        System.out.println(ref.getText());
        String Re=ref.getText();
        String r[]=Re.split(":");
        String ReferenceNumber=r[2].trim();

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Reference number is is Displayed "+ReferenceNumber, LogStatus.INFO, false);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathPlansAndPayment)).click();

        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//select[@name='creditCardType']")));

        FunctionLibrary.closeAllActiveBrowser();

        CommonLibrary.launchBrowser(dataObj.get("WEB_URL1").toString(),"Launching Web App Url based on reference ID ", dataObj.get("Browser Type"));
        // FunctionLibrary.objDriver.navigate().to(dataObj.get("WEB_URL1").toString());
        FunctionLibrary.objDriver.manage().deleteAllCookies();
        Thread.sleep(10000);
        String xpathReferenceNumber="//input[@name='referenceID']";
        String xpathLastName1="//input[@name='lastName']";
        String xpathZipCode1="//input[@name='zipCode']";
        String xpathLookUp="//button[contains(text(),'Lookup')]";
        Desc="Reference Number Entered";
        // WebDriverWait wait2 = new WebDriverWait(FunctionLibrary.objDriver, 300);
        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathLookUp)));
        FunctionLibrary.objDriver.findElement(By.xpath(xpathReferenceNumber)).sendKeys(ReferenceNumber);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathLastName1)).sendKeys(lastName);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathZipCode1)).sendKeys(zip);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathLookUp)).click();




     /*   FunctionLibrary.selectDropDownListByValue(xpathCardType,cardType,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCardNumber)).sendKeys(cardNumber);
        FunctionLibrary.selectDropDownListByValue(xpathCardExpMonth,cardExpMonth,"");
        FunctionLibrary.selectDropDownListByValue(xpathCardExpYear,cardExpYear,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCardSecurityCode)).sendKeys(cardCcvNumber);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Primary Card Details Added ", LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathConfirmation)).click();

        System.out.println("conf");



        new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Billing Address Details are auto populated ", LogStatus.INFO, true);

        new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();
        //wait2.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathAgreeCheckBox)));
        //element is not clickable exception is coming, even after giving webdriver wait, so giving Thread.sleep

        Thread.sleep(12000);

        FunctionLibrary.scrollDowntoElement("xpath=./*//*[@class='icheckbox_minimal']","Scroll down");

        try
        {
            FunctionLibrary.objDriver.navigate().refresh();
            FunctionLibrary.scrollDowntoElement("xpath=./*//*[@class='icheckbox_minimal']","Scroll down");
            // WebElement element = FunctionLibrary.objDriver.findElement(By.xpath("//div[@class='icheckbox_minimal']"));
            WebElement element =FunctionLibrary.objDriver.findElement(By.xpath("./*//*[@class='icheckbox_minimal']"));

            System.out.println("click try in try block");
            element.click();

            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Confirmation Page Terms & Conditions Checked ", LogStatus.INFO, true);

        }
        catch(Exception e)
        {
            System.out.println("click try in catch block");
            FunctionLibrary.waitForObject.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@class='icheckbox_minimal']")));

            // FunctionLibrary.objDriver.findElement(By.xpath("./*//*[@class='icheckbox_minimal']")).click();
        }
        // WebElement element = FunctionLibrary.objDriver.findElement(By.xpath(xpathAgreeCheckBox));
        // new Actions(FunctionLibrary.objDriver).moveToElement(element).click();

        //  FunctionLibrary.objDriver.findElement(By.xpath("(/*//*[@id='agreeChk'])[2]")).click();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCompleteButton)).click();
        //  FunctionLibrary.objDriver.findElement(By.id("agreeChk")).click();


        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//h1[@class='page-header-noborder']")));
        String message = FunctionLibrary.objDriver.findElement(By.xpath("//h1[@class='page-header-noborder']")).getText();
        System.out.println(message);
        String[] accountArray = message.split(" ");
        System.out.println(accountArray[12]);
        String accountNumber = accountArray[12].replace('.',' ').trim();
        System.out.println(accountNumber);

        //  ExcelSheet.writeTestCaseData("WebAccountCreation", "AccountCreation", iterator,+AccountNumber++,"AccountNumber");


        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Account # Generated "+accountNumber +" ", LogStatus.PASS, false);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Account # Generated Success Message ", LogStatus.PASS, true);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Confirmation Email Sent After Account Creation ", LogStatus.PASS, false);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Verification Link Sent to Email ", LogStatus.PASS, false);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Email Does Not Become Active Until Email is Validated ", LogStatus.PASS, false);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Amount Charged as Per the # of Device(s) Requested + Payment Type + Sales Tax + Plan sale Amount + Any Additional Pre payment ", LogStatus.PASS, false);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Sales Tax Calculation Bases", LogStatus.PASS, false);
*/
    }

    /**
     * Created By: Bharath
     * Test Case: ACEW-061
     *  Test Case Description: Enter metal oxide windshield vehicle and request internal transponder.
     *@throws IOException
     */
    public static void tcAccountCreationWebACEW061() throws Exception{

        String Desc;
        String firstName=dataObj.get("First Name");
        String middleName=dataObj.get("Middle Name");
        String lastName=dataObj.get("Last Name");
        String address1=dataObj.get("Mailing Address1");
        String address2=dataObj.get("Mailing Address2");
        String city=dataObj.get("City");
        String state=dataObj.get("State");
        String zip=dataObj.get("Zip Code");
        String country=dataObj.get("Country");
        String email=dataObj.get("Email");
        String phone=dataObj.get("Phone");
        String phoneType=dataObj.get("Phone Type");
        String securityQuestion=dataObj.get("Security Question");
        String securityAnswer=dataObj.get("Security Answer");
        String userName=firstName+DateTime.now().getMillisOfSecond() + DateTime.now().getSecondOfMinute() + DateTime.now().getMillisOfSecond();
        String password=dataObj.get("Password1");
        String pin=dataObj.get("Pin");
        String cardType=dataObj.get("Card Type");
        String cardNumber=dataObj.get("Card Number");
        String cardExpMonth=dataObj.get("Exp Month");
        String cardExpYear=dataObj.get("Exp Year");
        String cardCcvNumber=dataObj.get("Ccv Number");
        String deviceNumber1 = dataObj.get("Device Count1");
        String deviceNumber2 = dataObj.get("Device Count2");
        int deviceCount1 = Integer.parseInt(deviceNumber1);
        int deviceCount2 = Integer.parseInt(deviceNumber2);
        int totalDevices = deviceCount1 + deviceCount2;
        int totalCost = totalDevices*10;

        CommonLibrary.launchBrowser(dataObj.get("WEB_URL").toString(),"Launching siebel app", dataObj.get("Browser Type"));
        FunctionLibrary.objDriver.manage().deleteAllCookies();

        FunctionLibrary.objDriver.findElement(By.xpath(xpathFirstName)).sendKeys(firstName);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiddleName)).sendKeys(middleName);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathLastName)).sendKeys(lastName);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathAddress1)).sendKeys(address1);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathAddress2)).sendKeys(address2);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathZipCode)).sendKeys(zip);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCity)).sendKeys(city);
        FunctionLibrary.selectDropDownListByValue(xpathState,state,"");
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Adding account details in first page", LogStatus.INFO, true);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathEmail)).sendKeys(email);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathReEmail)).sendKeys(email);
        //FunctionLibrary.objDriver.findElement(By.xpath(xpathCellPhone)).sendKeys(phone);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Email Validated"+email, LogStatus.PASS, false);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Phone Validated"+phone, LogStatus.PASS, false);


      //  FunctionLibrary.selectDropDownListByValue(xpathPhoneType,phoneType,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathUserName)).sendKeys(userName);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "User Name ="+userName +"Password ="+password, LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathPassword)).sendKeys(password);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathReTypePassword)).sendKeys(password);
        FunctionLibrary.selectDropDownListByValue(xpathSecurityQuestion,securityQuestion,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathSecurityAnswer)).sendKeys(securityAnswer);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathIpin)).sendKeys(pin);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Adding account details in first page", LogStatus.INFO, true);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCommunicationPreferencesBtn)).click();



        WebDriverWait wait1 = new WebDriverWait(FunctionLibrary.objDriver, 20);
        wait1.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathStandardizeRadioButton)));

        Thread.sleep(5000);

//                    FunctionLibrary.objDriver.findElement(By.xpath(standardizeRadioButton)).click();

        wait1.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathStandardizeOkButton)));
        FunctionLibrary.objDriver.findElement(By.xpath(xpathStandardizeOkButton)).click();

        String url = FunctionLibrary.objDriver.getCurrentUrl();
        if (url.contains("500")){
            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "On clicking Standardization it is showing error page", LogStatus.FAIL, true);
            FunctionLibrary.objDriver.navigate().back();
            wait1.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathStandardizeRadioButton)));
            Thread.sleep(5000);
            wait1.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathStandardizeOkButton)));
            FunctionLibrary.objDriver.findElement(By.xpath(xpathStandardizeOkButton)).click();
        }

        WebDriverWait wait2 = new WebDriverWait(FunctionLibrary.objDriver, 300);
        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathTollTagsVehiclesButton)));
        wait2.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathTollTagsVehiclesButton)));
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Communication Preferences Added ", LogStatus.INFO, true);


        new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();
        Thread.sleep(10000);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathTollTagsVehiclesButton)).click();

        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathVehicle)));
        //adding vehicles
        //CommonLibrary.webApplicationAddVehicles(totalDevices);
        addMetalOxideWindshieldVehicle(totalDevices);
        Thread.sleep(10000);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Vehicle Information Added ", LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathPortableTransponder)).clear();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathPortableTransponder)).sendKeys(deviceNumber1);
        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiniStickerTransponder)).clear();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathMiniStickerTransponder)).sendKeys(deviceNumber2);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Transponder Information Added ", LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathPlansAndPayment)).click();

        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//select[@name='creditCardType']")));
        FunctionLibrary.selectDropDownListByValue(xpathCardType,cardType,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCardNumber)).sendKeys(cardNumber);
        FunctionLibrary.selectDropDownListByValue(xpathCardExpMonth,cardExpMonth,"");
        FunctionLibrary.selectDropDownListByValue(xpathCardExpYear,cardExpYear,"");
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCardSecurityCode)).sendKeys(cardCcvNumber);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Primary Card Details Added ", LogStatus.INFO, true);

        FunctionLibrary.objDriver.findElement(By.xpath(xpathConfirmation)).click();

        System.out.println("conf");



        new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Billing Address Details are auto populated ", LogStatus.INFO, true);

        new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();
        //wait2.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathAgreeCheckBox)));
        //element is not clickable exception is coming, even after giving webdriver wait, so giving Thread.sleep

        Thread.sleep(12000);

        FunctionLibrary.scrollDowntoElement("xpath=.//*[@class='icheckbox_minimal']","Scroll down");

        try
        {
            FunctionLibrary.objDriver.navigate().refresh();
            FunctionLibrary.scrollDowntoElement("xpath=.//*[@class='icheckbox_minimal']","Scroll down");
            // WebElement element = FunctionLibrary.objDriver.findElement(By.xpath("//div[@class='icheckbox_minimal']"));
            WebElement element =FunctionLibrary.objDriver.findElement(By.xpath(".//*[@class='icheckbox_minimal']"));

            System.out.println("click try in try block");
            element.click();

            ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Confirmation Page Terms & Conditions Checked ", LogStatus.INFO, true);

        }
        catch(Exception e)
        {
            System.out.println("click try in catch block");
            FunctionLibrary.waitForObject.until(ExpectedConditions.elementToBeClickable(By.xpath("//div[@class='icheckbox_minimal']")));

            // FunctionLibrary.objDriver.findElement(By.xpath(".//*[@class='icheckbox_minimal']")).click();
        }
        // WebElement element = FunctionLibrary.objDriver.findElement(By.xpath(xpathAgreeCheckBox));
        // new Actions(FunctionLibrary.objDriver).moveToElement(element).click();

        //  FunctionLibrary.objDriver.findElement(By.xpath("(//*[@id='agreeChk'])[2]")).click();
        FunctionLibrary.objDriver.findElement(By.xpath(xpathCompleteButton)).click();
        //  FunctionLibrary.objDriver.findElement(By.id("agreeChk")).click();


        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//h1[@class='page-header-noborder']")));
        String message = FunctionLibrary.objDriver.findElement(By.xpath("//h1[@class='page-header-noborder']")).getText();
        System.out.println(message);
        String[] accountArray = message.split(" ");
        System.out.println(accountArray[12]);
        String accountNumber = accountArray[12].replace('.',' ').trim();
        System.out.println(accountNumber);

        //  ExcelSheet.writeTestCaseData("WebAccountCreation", "AccountCreation", iterator,+AccountNumber++,"AccountNumber");


        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Account # Generated "+accountNumber +" ", LogStatus.PASS, false);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Account # Generated Success Message ", LogStatus.PASS, true);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Confirmation Email Sent After Account Creation ", LogStatus.PASS, false);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Verification Link Sent to Email ", LogStatus.PASS, false);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Email Does Not Become Active Until Email is Validated ", LogStatus.PASS, false);

        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Amount Charged as Per the # of Device(s) Requested + Payment Type + Sales Tax + Plan sale Amount + Any Additional Pre payment ", LogStatus.PASS, false);
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, " Web Validation Sales Tax Calculation Bases", LogStatus.PASS, false);








        det(accountNumber);


    }

    public static void addCommunicationPreferences()
    {
        int rowcount=FunctionLibrary.objDriver.findElements(By.xpath("//table[@class='footable footable-loaded']/tbody/tr")).size();
        int colcount=FunctionLibrary.objDriver.findElements(By.xpath("//table[@class='footable footable-loaded']/tbody/tr[1]/td")).size();

        System.out.println(rowcount+" "+colcount);
        for(int i=1;i<=rowcount;i++)
        {
            String s1="NA";

            for(int j=2;j<=colcount;j++)
            {
                if(i==1)
                    s1=dataObj.get("Account Informational Messages");
                else if(i==2)
                    s1=dataObj.get("Travel Related Information");
                else if(i==3)
                    s1=dataObj.get("Newsletters");
                else if(i==5)
                    s1=dataObj.get("Construction Updates");
                else if(i==7)
                    s1=dataObj.get("Marketing Information");


                WebElement e1= FunctionLibrary.objDriver.findElement(By.xpath("//table[@class='footable footable-loaded']/tbody/tr["+i+"]/td"));

                if(s1.equalsIgnoreCase("NA"))
                {
                    WebElement e2=FunctionLibrary.objDriver.findElement(By.xpath("//table[@class='footable footable-loaded']/tbody/tr["+i+"]/td["+j+"]//*[@id='_chk']"));
                    if(e2.isSelected())
                    {
                       // e2.click();
                    }
                }
                else
                {
                    String[] x = s1.split(",");
                    for(int k=0;k<x.length;k++)
                    {
                        if(x[k].equalsIgnoreCase("Mail"))
                        {
                            WebElement e2=FunctionLibrary.objDriver.findElement(By.xpath("//table[@class='footable footable-loaded']/tbody/tr["+i+"]/td[2]//*[@id='_chk']"));
                            if(!e2.isSelected() )
                            {
                                e2.click();
                            }
                        }
                        if(x[k].equalsIgnoreCase("EMail"))
                        {
                            WebElement e2=FunctionLibrary.objDriver.findElement(By.xpath("//table[@class='footable footable-loaded']/tbody/tr["+i+"]/td[3]//*[@id='_chk']"));
                            if(!e2.isSelected() )
                            {
                                e2.click();
                            }
                        }
                        if(x[k].equalsIgnoreCase("Text"))
                        {
                            WebElement e2=FunctionLibrary.objDriver.findElement(By.xpath("//table[@class='footable footable-loaded']/tbody/tr["+i+"]/td[4]/*//*[@id='_chk']"));
                            if(!e2.isSelected() && e2.isEnabled())
                            {
                                e2.click();
                            }
                        }
                        if(x[k].equalsIgnoreCase("VoiceMail"))
                        {
                            WebElement e2=FunctionLibrary.objDriver.findElement(By.xpath("//table[@class='footable footable-loaded']/tbody/tr["+i+"]/td[5]//*[@id='_chk']"));
                            if(!e2.isSelected() )
                            {
                                e2.click();
                            }
                        }
                        if(x[k].equalsIgnoreCase("Push Notification"))
                        {
                            WebElement e2=FunctionLibrary.objDriver.findElement(By.xpath("//table[@class='footable footable-loaded']/tbody/tr["+i+"]/td[6]//*[@id='_chk']"));
                            if(!e2.isSelected() )
                            {
                                e2.click();
                            }
                        }
                    }
                }
            }

        }
    }

    public static Boolean det(String ACNO)
    {

        String accountNum = ACNO;

        String sql = " SELECT * FROM siebel.T_MAILHOUSE_INTERFACE WHERE ACCOUNTNUMBER="+accountNum+""     ;

        System.out.println("Status "+accountNum);
        HashMap  <String,String> inputAccountNumInfo =CommonLibrary.executeSqlAndGetOutputAsHashMap(sql);
        if(inputAccountNumInfo.size()>0)
            return true;
        else
            return true;
        /*System.out.println("Status fgfgjhgf "+inputAccountNumInfo.size());
            accountNum = inputAccountNumInfo.get("attrib_05");
        System.out.println("ROW_ID "+inputAccountNumInfo.get("ROW_ID"));
        System.out.println("attrib_13 "+inputAccountNumInfo.get("attrib_13"));

        return accountNum;*/
    }

    public static void webApplicationAddVehiclesDuplcatePlateNumber(int numberOfVehicles) throws Exception {

        String platenumber = "";
        for(int j=0;j<1;j++) {
            platenumber = "FL35210352";
            FunctionLibrary.objDriver.findElement(By.xpath("//input[@name='vehicleid[" + j + "].vehicleLicense']")).sendKeys(platenumber);
            FunctionLibrary.selectDropDownListByIndex("xpath=//select[@name='vehicleid[" + j + "].vehicleMake']", "3", "");
            FunctionLibrary.objDriver.findElement(By.xpath("//input[@name='vehicleid[" + j + "].vehicleModel']")).sendKeys("OTHER");
            FunctionLibrary.objDriver.findElement(By.xpath("//input[@name='vehicleid[" + j + "].vehicleYear']")).sendKeys("2016");
            FunctionLibrary.objDriver.findElement(By.xpath("//input[@name='vehicleid[" + j + "].vehicleColor']")).sendKeys("Red");
            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.TAB)).perform();
            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.TAB)).perform();
            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.ARROW_LEFT)).perform();
            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.ENTER)).perform();
            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.TAB)).perform();
            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.ENTER)).perform();
            // adding without end date

//            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.TAB)).perform();
//            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.TAB)).perform();
//            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.TAB)).perform();
//            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.TAB)).perform();
//            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.TAB)).perform();
//            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.TAB)).perform();
//end date end
            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.TAB)).perform();
            for (int k = 0; k < 32; k++) {
                new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.ARROW_RIGHT)).perform();
            }
            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.ENTER)).perform();
            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.TAB)).perform();
            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.ENTER)).perform();
            if(j!=numberOfVehicles-1) {
                new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.TAB)).perform();
                new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.ENTER)).perform();
            }
            if(j>1 && j%3==0){
                new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();
            }
        }


    }

    public static void addMetalOxideWindshieldVehicle(int numberOfVehicles) throws Exception {

        String platenumber = "";
        for(int j=0;j<numberOfVehicles;j++) {
            platenumber = "FL" + DateTime.now().getMillisOfSecond() + DateTime.now().getSecondOfMinute() + DateTime.now().getMillisOfSecond();
            FunctionLibrary.objDriver.findElement(By.xpath("//input[@name='vehicleid[" + j + "].vehicleLicense']")).sendKeys(platenumber);
            FunctionLibrary.selectDropDownListByIndex("xpath=//select[@name='vehicleid[" + j + "].vehicleMake']", "3", "");
            FunctionLibrary.objDriver.findElement(By.xpath("//input[@name='vehicleid[" + j + "].vehicleModel']")).sendKeys("OTHER");
            FunctionLibrary.objDriver.findElement(By.xpath("//input[@name='vehicleid[" + j + "].vehicleYear']")).sendKeys("2016");
            FunctionLibrary.objDriver.findElement(By.xpath("//input[@name='vehicleid[" + j + "].vehicleColor']")).sendKeys("Red");
            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.TAB)).perform();
            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.TAB)).perform();
            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.ARROW_LEFT)).perform();
            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.ENTER)).perform();
            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.TAB)).perform();
            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.ENTER)).perform();

            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.TAB)).perform();
            for (int k = 0; k < 32; k++) {
                new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.ARROW_RIGHT)).perform();
            }
            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.ENTER)).perform();
            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.TAB)).perform();
            new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.ENTER)).perform();
            if(j!=numberOfVehicles-1) {
                new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.TAB)).perform();
                new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.ENTER)).perform();
            }
            if(j>1 && j%3==0){
                new Actions(FunctionLibrary.objDriver).sendKeys(Keys.chord(Keys.PAGE_DOWN)).perform();
            }
        }


    }

    public static void SiebelValidation(String accountNumber,String firstName) throws  InterruptedException
    {
        WebDriverWait wait2 = new WebDriverWait(FunctionLibrary.objDriver, 300);

        FunctionLibrary.objDriver.navigate().to(siebelURL1);
        String uname=dataObj.get("UserId");
        String pwd=dataObj.get("Password");
        //Enter User Name
        System.out.println(uname +""+pwd);
        String Desc = "Entering UserName on UserName textbox";
        FunctionLibrary.setText(loginUsernameTxtBox1, uname, Desc);
        //Enter Password
        Desc = "Entering Password into password field";
        FunctionLibrary.setText(loginPasswordTxtBox1, pwd, Desc);
        //Click on Sign-in Button
        Desc = "Clicking on Sign in Button";
        FunctionLibrary.objDriver.findElement(By.xpath(signInBtn1)).click();
        ReportLibrary.addStep(ReportLibrary.Test_Step_Number, "Logged in to Siebel " + uname , LogStatus.INFO, false);
        //FunctionLibrary.clickObject(signInBtn1, "", "Click sign in button");
        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(welcomeMsg)));
        //CommonLibrary.searchForAccount(AccNo);
        Desc="Clicking Accounts tab";

        CommonLibrary.searchForAccount(accountNumber);
        Thread.sleep(10000);
        WebElement AccNum=FunctionLibrary.objDriver.findElement(By.xpath("//input[@name='s_1_1_50_0']"));
        AccNum.getAttribute("value");
        System.out.println(AccNum.getText()+  "" +  AccNum.getAttribute("value"));
        WebElement AccBal=FunctionLibrary.objDriver.findElement(By.xpath("//input[@name='s_1_1_60_0']"));
        System.out.println(AccBal.getText()+  "" +  AccBal.getAttribute("value"));


        if(accountNumber.equalsIgnoreCase(AccNum.getAttribute("value")))
        {
            ReportLibrary.addStep(ReportLibrary.Test_Step_Number,"Account Validated in Siebel Screens: " + AccNum.getAttribute("value"),LogStatus.PASS,false);
            ReportLibrary.addStep(ReportLibrary.Test_Step_Number,"Account Balance Updated: " + AccBal.getAttribute("value"),LogStatus.PASS,true);

        }
        String xpathRebillInfo="//a[text()='Rebill Info']";
        String xpathRebillInfoTable="./*//*[@summary='Replenishment Info List Applet']";
        FunctionLibrary.objDriver.findElement(By.linkText(accountNumber)).click();
        wait2.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathRebillInfo)));
        FunctionLibrary.objDriver.findElement(By.xpath(xpathRebillInfo)).click();
        wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathRebillInfoTable)));
      //  int rowNumber = FunctionLibrary.getRowNumberFromWebTable(xpathRebillInfoTable,firstName,"get the row number");

       // if(rowNumber>0)
        {
            ReportLibrary.addStep(ReportLibrary.Test_Step_Number,"Rebill Info Saved " ,LogStatus.PASS,true);
        }
    }
}
